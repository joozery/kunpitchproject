import React, { useState, useEffect } from 'react'
import { Card, CardContent } from '../ui/card'
import { Button } from '../ui/button'
import { Input } from '../ui/input'
import { 
  Table, 
  TableBody, 
  TableCell, 
  TableHead, 
  TableHeader, 
  TableRow 
} from '../ui/table'
import { 
  TreePine, 
  Plus, 
  Search, 
  Edit, 
  Trash2, 
  Eye, 
  MapPin,
  Calendar,
  Users,
  TrendingUp,
  Grid,
  Table as TableIcon,
  Loader2,
  Star,
  Heart,
  Maximize,
  Mountain,
  Home,
  Globe
} from 'lucide-react'
import LandForm from './LandForm'
import { landAPI } from '../../lib/api'

// Helpers for land sizes
const toRaiNganWah = (land) => {
  const rai = Number(land.rai || 0)
  const ngan = Number(land.ngan || 0)
  const wah = Number(land.wah || 0)
  const squareWa = Number(land.square_wa || 0)
  if (rai || ngan || wah) return { rai, ngan, wah }
  if (squareWa) {
    const r = Math.floor(squareWa / 400)
    const afterR = squareWa - r * 400
    const n = Math.floor(afterR / 100)
    const w = Math.round(afterR - n * 100)
    return { rai: r, ngan: n, wah: w }
  }
  const sqm = Number(land.area || 0)
  const r2 = Math.floor(sqm / 1600)
  const remAfterRai = sqm - r2 * 1600
  const n2 = Math.floor(remAfterRai / 400)
  const w2 = Math.round(remAfterRai / 4 - n2 * 25) // 1 ngan=100wah=400sqm, 1 wah=4sqm
  return { rai: r2, ngan: n2, wah: Math.max(0, w2) }
}

const totalSquareWa = (land) => {
  const rai = Number(land.rai || 0)
  const ngan = Number(land.ngan || 0)
  const wah = Number(land.wah || 0)
  const squareWa = Number(land.square_wa || 0)
  if (squareWa) return squareWa
  return rai * 400 + ngan * 100 + wah
}

const LandManagement = () => {
  const [lands, setLands] = useState([])
  const [loading, setLoading] = useState(true)
  const [searchTerm, setSearchTerm] = useState('')
  const [filterStatus, setFilterStatus] = useState('all')
  const [filterType, setFilterType] = useState('all')
  const [filterOwnership, setFilterOwnership] = useState('all')
  const [viewMode, setViewMode] = useState('table')
  const [showAddForm, setShowAddForm] = useState(false)
  const [showEditForm, setShowEditForm] = useState(false)
  const [editingLand, setEditingLand] = useState(null)
  const [updatingStatusId, setUpdatingStatusId] = useState(null)

  // Load lands from API
  const fetchLands = async () => {
    try {
      setLoading(true)
      const res = await landAPI.getAll()
      console.log('Land API Response:', res) // Debug log
      if (res.success) {
        const landsData = res.data || []
        console.log('Lands data:', landsData) // Debug log
        // Debug: ตรวจสอบรูปภาพของแต่ละที่ดิน
        landsData.forEach((land, index) => {
          console.log(`Land ${index + 1} (${land.title}):`, {
            id: land.id,
            images: land.images,
            cover_image: land.cover_image,
            hasImages: land.images && land.images.length > 0,
            firstImage: land.images && land.images[0]
          })
        })
        setLands(landsData)
      } else {
        setLands([])
      }
    } catch (e) {
      console.error('Failed to load lands:', e)
      setLands([])
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchLands()
  }, [])

  const handleAddClick = () => setShowAddForm(true)
  const handleEditClick = (land) => { setEditingLand(land); setShowEditForm(true) }
  const handleSaved = async () => {
    setShowAddForm(false)
    setShowEditForm(false)
    setEditingLand(null)
    await fetchLands()
  }

  const getStatusColor = (status) => {
    const colors = {
      sale: 'bg-green-100 text-green-800',
      rent: 'bg-blue-100 text-blue-800',
      both: 'bg-purple-100 text-purple-800',
    }
    return colors[status] || 'bg-gray-100 text-gray-800'
  }

  const getStatusText = (status) => ({ sale: 'ขาย', rent: 'เช่า', both: 'ขาย/เช่า' }[status] || status)

  const handleStatusChange = async (landItem, newStatus) => {
    try {
      setUpdatingStatusId(landItem.id)
      await landAPI.update(landItem.id, { status: newStatus })
      setLands(prev => prev.map(l => (l.id === landItem.id ? { ...l, status: newStatus } : l)))
    } catch (e) {
      console.error('Failed to update status:', e)
      alert('อัปเดตสถานะไม่สำเร็จ')
    } finally {
      setUpdatingStatusId(null)
    }
  }

  const getTypeText = (type) => {
    const typeText = {
      'empty_land': 'ที่ดินเปล่า',
      'orchard': 'สวนผลไม้',
      'farm': 'ที่ดินเกษตร',
      'commercial': 'ที่ดินพาณิชย์',
      'industrial': 'ที่ดินอุตสาหกรรม'
    }
    return typeText[type] || type
  }

  const filteredLands = lands.filter(land => {
    const matchesSearch = (land.title || '').toLowerCase().includes(searchTerm.toLowerCase()) ||
                         (land.location || '').toLowerCase().includes(searchTerm.toLowerCase()) ||
                         (land.district || '').toLowerCase().includes(searchTerm.toLowerCase()) ||
                         (land.province || '').toLowerCase().includes(searchTerm.toLowerCase())
    const matchesStatus = filterStatus === 'all' || (land.status || '').toLowerCase() === filterStatus
    const matchesType = filterType === 'all' // land ไม่ได้ใช้ type ตอนนี้
    const matchesOwnership = filterOwnership === 'all' || land.land_ownership === filterOwnership
    return matchesSearch && matchesStatus && matchesType && matchesOwnership
  })

  if (showAddForm) {
    return (
      <LandForm
        onBack={() => setShowAddForm(false)}
        onSave={handleSaved}
      />
    )
  }

  if (showEditForm && editingLand) {
    return (
      <LandForm
        land={editingLand}
        isEditing
        onBack={() => { setShowEditForm(false); setEditingLand(null) }}
        onSave={handleSaved}
      />
    )
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="flex items-center space-x-2">
          <Loader2 className="h-6 w-6 animate-spin text-green-600" />
          <span className="text-gray-600 font-prompt">กำลังโหลดข้อมูล...</span>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900 font-prompt">จัดการที่ดิน</h1>
          <p className="text-gray-600 mt-1 font-prompt">จัดการข้อมูลที่ดินเปล่า ไร่นา สวนทั้งหมดในระบบ</p>
        </div>
        <Button className="bg-green-600 hover:bg-green-700" onClick={handleAddClick}>
          <Plus className="h-4 w-4 mr-2" />
          เพิ่มที่ดิน
        </Button>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-6">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-green-100 p-3 rounded-lg">
                <TreePine className="h-6 w-6 text-green-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">ที่ดินทั้งหมด</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">{lands.length}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-blue-100 p-3 rounded-lg">
                <Users className="h-6 w-6 text-blue-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">สถานะเป็นขาย</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">
                  {lands.filter(l => (l.status || '').toLowerCase() === 'sale').length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-green-100 p-3 rounded-lg">
                <Calendar className="h-6 w-6 text-green-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">สถานะเป็นเช่า</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">
                  {lands.filter(l => (l.status || '').toLowerCase() === 'rent').length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>



        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-purple-100 p-3 rounded-lg">
                <TrendingUp className="h-6 w-6 text-purple-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">มูลค่ารวม</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">
                  ฿{(lands.reduce((sum, l) => sum + Number(l.price || 0), 0) / 1000000).toFixed(1)}M
                </p>
              </div>
            </div>
          </CardContent>
        </Card>



        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-orange-100 p-3 rounded-lg">
                <Home className="h-6 w-6 text-orange-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">คนสัญชาติไทย</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">
                  {lands.filter(l => l.land_ownership === 'thai').length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardContent className="p-6">
            <div className="flex items-center space-x-4">
              <div className="bg-red-100 p-3 rounded-lg">
                <Globe className="h-6 w-6 text-red-600" />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-600 font-prompt">คนต่างชาติ</p>
                <p className="text-2xl font-bold text-gray-900 font-prompt">
                  {lands.filter(l => l.land_ownership === 'foreign').length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>






      </div>

      {/* Filters and Search */}
      <Card>
        <CardContent className="p-6">
          <div className="flex flex-col lg:flex-row gap-4">
            <div className="flex-1">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
                <Input
                  placeholder="ค้นหาที่ดิน..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10"
                />
              </div>
            </div>
            
            <div className="flex gap-4">
              <select
                value={filterStatus}
                onChange={(e) => setFilterStatus(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="all">สถานะทั้งหมด</option>
                <option value="sale">ขาย</option>
                <option value="rent">เช่า</option>
                <option value="both">ขาย/เช่า</option>
              </select>
              
              <select
                value={filterType}
                onChange={(e) => setFilterType(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="all">ประเภททั้งหมด</option>
                <option value="empty_land">ที่ดินเปล่า</option>
                <option value="orchard">สวนผลไม้</option>
                <option value="farm">ที่ดินเกษตร</option>
                <option value="commercial">ที่ดินพาณิชย์</option>
                <option value="industrial">ที่ดินอุตสาหกรรม</option>
              </select>

              <select
                value={filterOwnership}
                onChange={(e) => setFilterOwnership(e.target.value)}
                className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="all">กรรมสิทธิ์ทั้งหมด</option>
                <option value="thai">คนสัญชาติไทย</option>
                <option value="foreign">คนต่างชาติ</option>
              </select>
              
              <div className="flex border border-gray-300 rounded-md">
                <button
                  onClick={() => setViewMode('table')}
                  className={`px-3 py-2 ${viewMode === 'table' ? 'bg-green-600 text-white' : 'bg-white text-gray-600'}`}
                >
                  <TableIcon className="h-4 w-4" />
                </button>
                <button
                  onClick={() => setViewMode('grid')}
                  className={`px-3 py-2 ${viewMode === 'grid' ? 'bg-green-600 text-white' : 'bg-white text-gray-600'}`}
                >
                  <Grid className="h-4 w-4" />
                </button>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>



      {/* Land List */}
      {viewMode === 'table' ? (
          <Card>
            <CardContent className="p-0">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead className="font-prompt">ที่ดิน</TableHead>
                    <TableHead className="font-prompt">กรรมสิทธิ์</TableHead>
                    <TableHead className="font-prompt">ราคาต่อ ตร.วา</TableHead>
                    <TableHead className="font-prompt">ที่อยู่</TableHead>
                    <TableHead className="font-prompt">ราคา</TableHead>
                    <TableHead className="font-prompt">สถานะ</TableHead>
                    <TableHead className="font-prompt">ขนาด</TableHead>
                    <TableHead className="font-prompt">วิว</TableHead>
                    <TableHead className="font-prompt">เลขที่ยูนิต</TableHead>
                    <TableHead className="font-prompt">จัดการ</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredLands.map((land) => (
                    <TableRow key={land.id}>
                      <TableCell>
                        <div className="flex items-center space-x-3">
                          <img
                            src={(() => {
                              // ตรวจสอบรูปภาพตามลำดับ: cover_image -> images[0] -> fallback
                              if (land.cover_image) return land.cover_image;
                              if (land.images && land.images.length > 0 && land.images[0]) return land.images[0];
                              return 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?auto=format&fit=crop&w=400&q=60';
                            })()}
                            alt={land.title}
                            className="w-12 h-12 object-cover rounded-lg"
                            onError={(e) => {
                              console.log(`Image failed to load for land ${land.id}:`, e.target.src);
                              e.target.src = 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?auto=format&fit=crop&w=400&q=60';
                            }}
                            onLoad={() => {
                              console.log(`Image loaded successfully for land ${land.id}`);
                            }}
                          />
                          <div>
                            <p className="font-medium text-gray-900 font-prompt">{land.title}</p>
                            <p className="text-sm text-gray-500 font-prompt">
                              {toRaiNganWah(land).rai} ไร่ {toRaiNganWah(land).ngan} งาน {toRaiNganWah(land).wah} ตร.ว.
                            </p>
                          </div>
                        </div>
                      </TableCell>
                      <TableCell className="font-prompt">
                        <span className={`px-2 py-1 rounded-full text-xs font-semibold ${
                          land.land_ownership === 'thai' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'
                        }`}>
                          {land.land_ownership === 'thai' ? 'คนสัญชาติไทย' : 'คนต่างชาติ'}
                        </span>
                      </TableCell>
                      <TableCell className="font-prompt">
                        <div className="text-sm">
                          <p className="font-medium text-gray-900">฿{Number(land.price_per_sq_wa || 0).toLocaleString('th-TH')}</p>
                          <p className="text-xs text-gray-500">ต่อ ตร.ว.</p>
                        </div>
                      </TableCell>
                      <TableCell className="font-prompt">
                        <div className="text-sm">
                          <p className="font-medium text-gray-900">{land.district || land.location}</p>
                          <p className="text-xs text-gray-500">{land.province}</p>
                          {land.postal_code && <p className="text-xs text-gray-400">{land.postal_code}</p>}
                          {land.google_map_url && (
                            <a 
                              href={land.google_map_url} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              className="text-xs text-blue-600 hover:underline"
                            >
                              ดูแผนที่
                            </a>
                          )}
                        </div>
                      </TableCell>
                      <TableCell className="font-prompt">
                          <div>
                            <p className="font-medium text-gray-900">฿{Number(land.price || 0).toLocaleString('th-TH')}</p>
                            {Number(land.rent_price || 0) > 0 && (
                              <p className="text-sm text-gray-500">฿{Number(land.rent_price).toLocaleString('th-TH')}/เดือน</p>
                            )}
                          </div>
                      </TableCell>
                       <TableCell>
                         <select
                           className="px-2 py-1 text-xs rounded-md border"
                           value={(land.status || 'sale')}
                           disabled={updatingStatusId === land.id}
                           onChange={(e) => handleStatusChange(land, e.target.value)}
                         >
                           <option value="sale">ขาย</option>
                           <option value="rent">เช่า</option>
                           <option value="both">ขาย/เช่า</option>
                         </select>
                       </TableCell>
                       <TableCell className="font-prompt">{totalSquareWa(land) || 0} ตร.ว.</TableCell>
                       <TableCell className="font-prompt">
                         <span className="text-sm text-gray-600">
                           {land.view || '-'}
                         </span>
                       </TableCell>
                       <TableCell className="font-prompt">
                         <span className="text-sm text-gray-600">
                           {land.unit_number || '-'}
                         </span>
                       </TableCell>
                      <TableCell>
                        <div className="flex items-center space-x-2">
                          <Button variant="ghost" size="sm">
                            <Eye className="h-4 w-4" />
                          </Button>
                          <Button variant="ghost" size="sm" onClick={() => handleEditClick(land)}>
                            <Edit className="h-4 w-4" />
                          </Button>
                          <Button variant="ghost" size="sm">
                            <Trash2 className="h-4 w-4" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </CardContent>
          </Card>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredLands.map((land) => (
              <Card key={land.id} className="overflow-hidden">
                <div className="relative">
                  <img
                    src={(() => {
                      // ตรวจสอบรูปภาพตามลำดับ: cover_image -> images[0] -> fallback
                      if (land.cover_image) return land.cover_image;
                      if (land.images && land.images.length > 0 && land.images[0]) return land.images[0];
                      return 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?auto=format&fit=crop&w=800&q=60';
                    })()}
                    alt={land.title}
                    className="w-full h-48 object-cover"
                    onError={(e) => {
                      console.log(`Grid image failed to load for land ${land.id}:`, e.target.src);
                      e.target.src = 'https://images.unsplash.com/photo-1500382017468-9049fed747ef?auto=format&fit=crop&w=800&q=60';
                    }}
                    onLoad={() => {
                      console.log(`Grid image loaded successfully for land ${land.id}`);
                    }}
                  />
                  <div className="absolute top-2 left-2">
                    <span className={`px-2 py-1 rounded-full text-xs font-semibold ${getStatusColor(land.status)}`}>
                      {getStatusText(land.status)}
                    </span>
                  </div>
                  <div className="absolute top-2 right-2 flex space-x-1">
                    <Button variant="ghost" size="sm" className="bg-white/80 hover:bg-white">
                      <Heart className="h-4 w-4" />
                    </Button>
                    <Button variant="ghost" size="sm" className="bg-white/80 hover:bg-white">
                      <Star className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
                
                <CardContent className="p-4">
                  <div className="space-y-3">
                    <div>
                      <h3 className="font-semibold text-gray-900 font-prompt">{land.title}</h3>
                      <div className="text-sm text-gray-500 font-prompt">
                        <p>{land.district || land.location}</p>
                        <p>{land.province}</p>
                        {land.postal_code && <p>{land.postal_code}</p>}
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-4 text-sm text-gray-600 font-prompt">
                      <div className="flex items-center space-x-1">
                        <Maximize className="h-4 w-4" />
                        <span>{toRaiNganWah(land).rai} ไร่</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <span className={`px-2 py-1 rounded-full text-xs font-semibold ${
                          land.land_ownership === 'thai' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'
                        }`}>
                          {land.land_ownership === 'thai' ? 'คนสัญชาติไทย' : 'คนต่างชาติ'}
                        </span>
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-4 text-sm text-gray-600 font-prompt">
                      <div className="flex items-center space-x-1">
                        <span className="font-medium">฿{Number(land.price_per_sq_wa || 0).toLocaleString('th-TH')}</span>
                        <span className="text-xs">ต่อ ตร.ว.</span>
                      </div>
                      {land.view && (
                        <div className="flex items-center space-x-1">
                          <span className="text-xs">วิว: {land.view}</span>
                        </div>
                      )}
                      {land.unit_number && (
                        <div className="flex items-center space-x-1">
                          <span className="text-xs">เลขที่: {land.unit_number}</span>
                        </div>
                      )}
                    </div>
                    
                    {land.nearby_transport && (
                      <div className="text-xs text-gray-500 font-prompt">
                        <span className="font-medium">การเดินทางใกล้เคียง:</span> {land.nearby_transport}
                      </div>
                    )}
                    
                    {land.seo_tags && (
                      <div className="text-xs text-gray-400 font-prompt">
                        <span className="font-medium">Tags:</span> {land.seo_tags}
                      </div>
                    )}
                    
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-semibold text-gray-900 font-prompt">฿{Number(land.price || 0).toLocaleString('th-TH')}</p>
                        {Number(land.rent_price || 0) > 0 && (
                          <p className="text-sm text-gray-500 font-prompt">฿{Number(land.rent_price).toLocaleString('th-TH')}/เดือน</p>
                        )}
                      </div>
                    </div>
                    
                    <div className="flex items-center justify-between pt-2 border-t">
                      <div className="text-sm text-gray-500 font-prompt">
                        <div className="flex items-center space-x-2">
                          <span>{toRaiNganWah(land).rai} ไร่ {toRaiNganWah(land).ngan} งาน {toRaiNganWah(land).wah} ตร.ว.</span>
                          <span className="text-xs text-gray-400">({totalSquareWa(land) || 0} ตร.ว.)</span>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Button variant="ghost" size="sm" onClick={() => handleEditClick(land)}>
                          <Edit className="h-4 w-4" />
                        </Button>
                        <Button variant="ghost" size="sm">
                          <Trash2 className="h-4 w-4" />
                        </Button>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        )}
      </div>
    </div>
  )
}

export default LandManagement